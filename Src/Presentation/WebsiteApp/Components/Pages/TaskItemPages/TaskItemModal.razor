@using Application.Aggregates.TaskItemAggregate.Commands.CreateUpdate
@using Application.Common.Models

<div class="modal-backdrop fade show"></div>

<div class="modal show" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Task List</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="ModalCancel">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="taskItemFormRequest" OnValidSubmit="ModalOk">

                <DataAnnotationsValidator />

                <div class="modal-body">
                    <div class="card-body">
                        <div class="form-group">
                            <label for="inputClient" class="col-md-3 col-sm-6 col-form-label-sm">Title</label>
                            <InputText class="form-control   col-6" @bind-Value="taskItemFormRequest.Title" placeholder="tasklist name" autocomplete="off" />
                            &nbsp;<ValidationMessage For="@(() => taskItemFormRequest.Title)" />
                        </div>
                        <div class="form-group">
                            <label for="inputClient" class="col-md-3 col-sm-6 col-form-label-sm">Description</label>
                            <InputText class="form-control   col-6" @bind-Value="taskItemFormRequest.Description" placeholder="tasklist name" autocomplete="off" />
                            &nbsp;<ValidationMessage For="@(() => taskItemFormRequest.Description)" />
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-danger" data-dismiss="modal" @onclick="() => ModalCancel()">Close</button>
                    <button type="submit" class="btn btn-sm btn-primary">Save</button>
                </div>

            </EditForm>

        </div>
    </div>
</div>


@code {

    [Parameter]
    public TaskItemFormRequest? taskItemFormRequest { get; set; }

    [Parameter]
    public EventCallback<TaskItemFormRequest> OnClose { get; set; }
    

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(taskItemFormRequest);
    }

}
