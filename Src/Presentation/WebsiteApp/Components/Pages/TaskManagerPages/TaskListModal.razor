@using Application.Aggregates.TaskListAggregate.Commands.CreateUpdate
@using Application.Common.Models

<div class="modal-backdrop fade show"></div>

<div class="modal show" tabindex="-1" role="dialog" style="display:block">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">

            <RadzenTemplateForm Data="@taskListFormRequest" Submit="@SubmitCallback">
                <div class="modal-body">
                    <div class="card-body">
                        <RadzenRow Gap="2rem" class="rz-p-0 rz-p-lg-4">
                            <RadzenColumn Size="12" SizeMD="12">
                                <RadzenStack>
                                    <RadzenFieldset Text="Task List">
                                        <RadzenStack Gap="1rem">
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="12" SizeMD="4">
                                                    <RadzenLabel Text="Title" Component="Title" />
                                                </RadzenColumn>
                                                <RadzenColumn Size="12" SizeMD="8">
                                                    <RadzenTextBox @bind-Value="taskListFormRequest.Title" Name="Title" Placeholder="tasklist name" />
                                                    <RadzenRequiredValidator Component="Title" Text="Title is required" Style="position: absolute;" />
                                                </RadzenColumn>
                                            </RadzenRow>
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="12" SizeMD="4">
                                                    <RadzenLabel Text="DueDate" Component="DueDate" />
                                                </RadzenColumn>
                                                <RadzenColumn Size="12" SizeMD="8">
                                                    <RadzenDatePicker @bind-Value="taskListFormRequest.DueDate" Style="width: 100%;" Name="DueDate" />
                                                    <RadzenRequiredValidator Component="DueDate" Text="Due Date is required" Style="position: absolute;" />
                                                </RadzenColumn>
                                            </RadzenRow>
                                            <RadzenRow AlignItems="AlignItems.Center">
                                                <RadzenColumn Size="12" SizeMD="4">
                                                    <RadzenLabel Text="User" Component="User" />
                                                </RadzenColumn>
                                                <RadzenColumn Size="12" SizeMD="8">
                                                    <RadzenDropDown @bind-Value="taskListFormRequest.AssignedToId" Data="@taskUserList" Style="width: 100%;" TextProperty="Text" ValueProperty="Value" Name="Users">
                                                    </RadzenDropDown>
                                                </RadzenColumn>
                                            </RadzenRow>
                                        </RadzenStack>
                                    </RadzenFieldset>
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                    </div>
                </div>

                <div class="modal-footer">
                    <RadzenButton class="rz-mr-2" Text="Close" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(() => ModalCancel())" Variant="Variant.Outlined" />
                    <RadzenButton Text="Save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                </div>

            </RadzenTemplateForm>

        </div>
    </div>
</div>


@code {

    [Parameter]
    public TaskListFormRequest? taskListFormRequest { get; set; }

    [Parameter]
    public EventCallback<TaskListFormRequest?> OnClose { get; set; }

    [Parameter]
    public List<SelectListItem> taskUserList { get; set; }

    private EventCallback<TaskListFormRequest> SubmitCallback => EventCallback.Factory.Create<TaskListFormRequest>(this, ModalOk);


    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(null);
    }

    private async Task ModalOk(TaskListFormRequest taskListFormRequest)
    {
        if (taskListFormRequest != null)
        {
            await OnClose.InvokeAsync(taskListFormRequest);
        }
    }

}
