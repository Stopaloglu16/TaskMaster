@page "/taskmanager"
@attribute [Authorize]

@using Application.Aggregates.TaskListAggregate.Queries
@using Application.Common.Models
@using WebApp.Services

@inject IWebApiService<TaskListDto, TaskListDto> _taskListService



<h3>TaskManager</h3>

@if(taskListDtos != null)
{
    @taskListDtos.TotalPages <br />
    @taskListDtos.HasPreviousPage <br />
    @taskListDtos.PageNumber <br />
    @taskListDtos.HasNextPage <br />
    @taskListDtos.TotalCount


    foreach(var item in taskListDtos.Items) 
    {
        @item.Title <br /> 
    }

}


@code {


    public PagingResponse<TaskListDto> taskListDtos { get; set; }


    protected async override Task OnInitializedAsync()
    {
        //taskListDtos = new PagingResponse<TaskListDto>();

        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            taskListDtos = await _taskListService.GetAllDataAsync($"tasklist?PageNumber=2&PageSize=15&OrderBy=Id&IsDescending=false");
            
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }



}
